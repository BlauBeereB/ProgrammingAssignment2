install.packages("KernSmooth")
help read.table
help 'read.table''
help(read.table)
install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
m<_div
m<-div
m_div
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(1, 10, by=0.5)
seq(0, 10, by=0.5)
my_seq<-seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0, 1, 2), times=10)
rep(c(0, 1, 2), each=10)
swirl()
install.packages("swirl")
library(swirl)
rm(list=ls())
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name <- c(my_char, "Blau")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep=" ")
paste(c(1:3), c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="-")
setwd("D:/Bettina_Privat/Coursera/Repositories/ProgrammingAssignment2")
x <- c(1, 2, 3)
makeVector(x)
source("cachevector.r")
makeVector(x)
cacheMean(x)
traceback()
cachevector(x)
cacheMean(x)
x = vector(1, 2, 3)
x = c(1, 2, 39
x = c(1, 2,
x = c(1, 2, 3)
typeof(x)
x <- as.vector(x)
typeof(x)
is.vector(x)
cacheMean(x)
makeVector(x)
list
makeVector$get
xlist <- makeVector(x)
xlist
xlist$get
print(xlist$get)
xx <- xlist$get
xx
m <- cacheMean(xlist)
m
cacheMean(xlist)
x <- 1:6
cacheMean(makeVector(x))
cacheMean(makeVector(x))
cacheMean(makeVector(x))
xlist <- makeVector(x)
cacheMean(xlist)
cacheMean(xlist)
source("cachematrix.r")
matlist <- makeCacheMatrix(x <- as.matrix(c(1, 2; 3, 4)))
mat <- c(1, 2; 3, 4)
mat <- matrix(c(1, 2, 3, 4), nrow = 2, ncol = 1)
mat
mat <- matrix(c(1, 2, 3, 4), nrow = 2, ncol = 2)
mat
ml <- makeCacheMatrix(mat)
ml <- makeCacheMatrix(mat)
source("cachematrix.r")
ml <- makeCacheMatrix(mat)
ml
cacheSolve(ml)
traceback()
cacheSolve(ml)
source("cachematrix.r")
ml <- makeCacheMatrix(mat)
ml
cacheSolve(ml)
ml*mat
ml**mat
ml%*%mat
in <- cacheSolve(ml)
invm <- cacheSolve(ml)
invm
invm%*%mat
source("cachematrix.r")
mat <- matrix(rnorm(12), nrow = 3, ncol = 4)
mat
cmat <- makeCacheMatrix(mat)
invm <- cacheSolve(cmat)
source("cachematrix.r")
cmat <- makeCacheMatrix(mat)
source("cachematrix.r")
cmat <- makeCacheMatrix(mat)
mat <- matrix(rnorm(16), nrow = 3)
mat <- matrix(rnorm(16), nrow = 4)
mat
cmat <- makeCacheMatrix(mat)
invm <- cacheSolve(cmat)
invm
invm%*%mat
mat <- matrix(rnorm(16), nrow = 4)
invmat <- makeCacheMatrix(mat)
invmatrix <- cacheSolve(invmat)
invmatrix
invmatrix <- cacheSolve(invmat)
invmatrix
mat %*% invmatrix
